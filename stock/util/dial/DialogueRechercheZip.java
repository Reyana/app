/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package stock.util.dial;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import stock.base.OP;
import stock.menu.FenetreMenuPrincipal;
import stock.menu.entrepot.FenetreMenuEntrepot;
import stock.menu.entrepot.envoi.FenetreEntrepotEnvoi;
import stock.menu.entrepot.recep.FenetreEntrepotReception;
import stock.menu.op.FenetreMenuOP;
import stock.menu.op.retour.FenetreOPRetour;
import stock.util.sql.SQL_function;

    
    /**
 *
 * @author Magency
 */
public class DialogueRechercheZip extends javax.swing.JDialog {
    private final java.awt.Frame fenMere;
    private final String btnclicked, database;
    private ArrayList<File> volumes = new ArrayList<File>();
    private final OP OP_choisi;
    private String OS;

    /**
     * Creates new form NewJDialog
     */
    public DialogueRechercheZip(String btnclicked, java.awt.Frame parent, boolean modal, String db, OP op) {
        super(parent, modal);
        initComponents();
        
        // Place le fenetre au centre de la fenetre parent
        this.setLocationRelativeTo(parent);
        this.btnclicked = btnclicked;
        System.out.println(btnclicked);
        this.database = db;
        this.OP_choisi  = op;
        initlabel();
        // Récupère le modèle de la JTable
        if (btnclicked.equalsIgnoreCase("entrepotEnvoi"))
            this.fenMere = (FenetreEntrepotEnvoi)parent;
        else if (btnclicked.equalsIgnoreCase("entrepotReception"))
           this.fenMere = (FenetreMenuEntrepot)parent;
        else if (btnclicked.equalsIgnoreCase("OPReception"))
           this.fenMere = (FenetreMenuPrincipal)parent;
        else if (btnclicked.equalsIgnoreCase("retourEntrepot"))
           this.fenMere = (FenetreOPRetour)parent;
        else 
           this.fenMere = null;
        try {
            initcbox();
        } catch (IOException ex) {
            Logger.getLogger(DialogueRechercheZip.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    

    public DialogueRechercheZip(String btnclicked, java.awt.Frame parent, boolean modal, int longueur, int largeur, String db,OP op) {
        this(btnclicked,parent, modal,db,op);
        this.setSize(new java.awt.Dimension(longueur / 2, largeur / 2));
        this.setLocationRelativeTo(parent);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelNomFenetre = new javax.swing.JLabel();
        panelCentre = new javax.swing.JPanel();
        labelInstructions = new javax.swing.JLabel();
        Choixdisque = new javax.swing.JComboBox();
        panelInfos = new javax.swing.JPanel();
        labelInfos = new javax.swing.JLabel();
        labelInfos1 = new javax.swing.JLabel();
        labelInfos2 = new javax.swing.JLabel();
        panelBoutons = new javax.swing.JPanel();
        btnRetour = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Choix de l'emplacement de stockage");
        setMinimumSize(new java.awt.Dimension(400, 300));

        labelNomFenetre.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        labelNomFenetre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNomFenetre.setText("_");
        getContentPane().add(labelNomFenetre, java.awt.BorderLayout.NORTH);

        panelCentre.setLayout(new java.awt.GridBagLayout());

        labelInstructions.setText("Choisissez le volume sur lequel stocker l'archive :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 5, 10);
        panelCentre.add(labelInstructions, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 20, 10);
        panelCentre.add(Choixdisque, gridBagConstraints);

        panelInfos.setLayout(new java.awt.GridBagLayout());

        labelInfos.setText("Cette archive sera placée sur le volume sélectionné, ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panelInfos.add(labelInfos, gridBagConstraints);

        labelInfos1.setText("et aura comme début de nom :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        panelInfos.add(labelInfos1, gridBagConstraints);

        labelInfos2.setText("le nom de l'OP, suivi de la date d'envoi");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        panelInfos.add(labelInfos2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 10, 20);
        panelCentre.add(panelInfos, gridBagConstraints);

        getContentPane().add(panelCentre, java.awt.BorderLayout.CENTER);

        btnRetour.setText("Retour");
        btnRetour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetourMouseClicked(evt);
            }
        });
        panelBoutons.add(btnRetour);

        btnOK.setText("OK");
        btnOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOKMouseClicked(evt);
            }
        });
        panelBoutons.add(btnOK);

        getContentPane().add(panelBoutons, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetourMouseClicked
        if (btnclicked.equalsIgnoreCase("entrepotEnvoi"))
        {
            
            this.dispose();
        }
        else if (btnclicked.equalsIgnoreCase("retourEntrepot"))
        {
            this.fenMere.dispose();
            this.dispose();
        }
        else if (btnclicked.equalsIgnoreCase("entrepotReception"))
        {
            this.dispose();
        }
        else if (btnclicked.equalsIgnoreCase("OPReception")){
            this.dispose();
        }
    }//GEN-LAST:event_btnRetourMouseClicked

    private void btnOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOKMouseClicked
        try{
            if (btnclicked.equalsIgnoreCase("entrepotEnvoi"))
            {
                SQL_function.creation_zip_bdd(this.database, this.volumes.get(this.Choixdisque.getSelectedIndex()).getPath(),this.OP_choisi.getNomOP(),this.OS);
                FenetreMenuPrincipal fMenuPrincipal = new FenetreMenuPrincipal(this.fenMere.getWidth(), this.fenMere.getHeight());
                fMenuPrincipal.setVisible(true); 
                this.fenMere.dispose();
                this.dispose();
            }
            else if (btnclicked.equalsIgnoreCase("retourEntrepot"))
            {
                // Le champ 'envoyee' de l'op est passe a 2 <=> OP envoyee depuis l'OP
                this.OP_choisi.setconfenv(2);
                SQL_function.creation_zip_bdd(this.database, this.volumes.get(this.Choixdisque.getSelectedIndex()).getPath(),this.OP_choisi.getNomOP(),this.OS);
                FenetreMenuPrincipal fMenuPrincipal = new FenetreMenuPrincipal(this.fenMere.getWidth(), this.fenMere.getHeight());
                fMenuPrincipal.setVisible(true); 
                this.fenMere.dispose();
                this.dispose();
            }
            else if (btnclicked.equalsIgnoreCase("entrepotReception")) 
            {
                SQL_function.importation_zip(this.database, this.volumes.get(this.Choixdisque.getSelectedIndex()).getPath(),this.OS);
                FenetreEntrepotReception fEntrepotReception = new FenetreEntrepotReception(this.OP_choisi,
                                            this.fenMere.getWidth(), this.fenMere.getHeight());
                fEntrepotReception.setVisible(true); 
                this.fenMere.dispose();
                this.dispose();
            }
            else if (btnclicked.equalsIgnoreCase("OPReception"))
            {
                SQL_function.importation_zip(this.database, this.volumes.get(this.Choixdisque.getSelectedIndex()).getPath(),this.OS);
                FenetreMenuOP fMenuOP = new FenetreMenuOP(SQL_function.getdataop_local(), 
                                            this.fenMere.getWidth(), this.fenMere.getHeight());
                fMenuOP.setVisible(true);
                this.fenMere.dispose();
                this.dispose();
            }
        } catch (Exception ex) {
            System.out.println("fichier n'exite pas (btnouiclicked): "+ ex.getMessage());
        }


    }//GEN-LAST:event_btnOKMouseClicked
    
    private void initcbox() throws IOException{
        
        File[] racines = new File("/Volumes").listFiles();
        if (racines == null){
             racines =  File.listRoots();
             this.OS="windows";
        }else{
            this.OS = "mac";
        }
        for (int i = 0; i < racines.length; i++) {
            this.volumes.add(racines[i]);
            this.Choixdisque.addItem(racines[i]);
        }
    }
    
    private void initlabel(){
        if (btnclicked.equalsIgnoreCase("entrepotEnvoi") || btnclicked.equalsIgnoreCase("retourEntrepot"))
        {
            this.labelNomFenetre.setText("Exportation des donnees");
            this.labelInstructions.setText("Choisissez le volume sur lequel stocker l'archive :");
        }
        else 
            this.labelNomFenetre.setText("Importation des donnees");
            this.labelInstructions.setText("Choisissez le volume sur lequel est stockée l'archive :");
            this.panelInfos.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox Choixdisque;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRetour;
    private javax.swing.JLabel labelInfos;
    private javax.swing.JLabel labelInfos1;
    private javax.swing.JLabel labelInfos2;
    private javax.swing.JLabel labelInstructions;
    private javax.swing.JLabel labelNomFenetre;
    private javax.swing.JPanel panelBoutons;
    private javax.swing.JPanel panelCentre;
    private javax.swing.JPanel panelInfos;
    // End of variables declaration//GEN-END:variables
}
