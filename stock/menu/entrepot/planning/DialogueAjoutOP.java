/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package stock.menu.entrepot.planning;

import stock.menu.entrepot.planning.FenetreEntrepotPlanning;
import stock.menu.entrepot.planning.ModelPlanning;
import stock.util.sql.InstructionSql;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JTable;

/**
 *
 * @author Magency
 */
public class DialogueAjoutOP extends javax.swing.JDialog {
    private final FenetreEntrepotPlanning fenMere;

    /**
     * Creates new form NewJDialog
     */
    public DialogueAjoutOP(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        // Place le fenetre au centre de la fenetre parent
        this.setLocationRelativeTo(parent);
        this.fenMere = (FenetreEntrepotPlanning)parent;
    }
    
    public DialogueAjoutOP(java.awt.Frame parent, boolean modal, int longueur, int largeur) {
        this(parent, modal);
        
        // Place le fenetre au centre de la fenetre parent
        this.setSize(new java.awt.Dimension(longueur / 2, largeur / 2));
        this.setLocationRelativeTo(parent);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelNomFenetre = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnRetour = new javax.swing.JButton();
        btnOK = new javax.swing.JButton();
        panelCentre = new javax.swing.JPanel();
        labelNom = new javax.swing.JLabel();
        labelNb = new javax.swing.JLabel();
        labelDateDebut = new javax.swing.JLabel();
        labelDateFin = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        txtNb = new javax.swing.JTextField();
        dtDebut = new com.toedter.calendar.JDateChooser();
        dtFin = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ajout d'une opération");
        setMinimumSize(new java.awt.Dimension(400, 300));

        labelNomFenetre.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        labelNomFenetre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNomFenetre.setText("Ajout d'une OP");
        getContentPane().add(labelNomFenetre, java.awt.BorderLayout.NORTH);

        btnRetour.setText("Retour");
        btnRetour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetourMouseClicked(evt);
            }
        });
        jPanel1.add(btnRetour);

        btnOK.setText("OK");
        btnOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnOKMouseClicked(evt);
            }
        });
        jPanel1.add(btnOK);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        java.awt.GridBagLayout panelCentreLayout = new java.awt.GridBagLayout();
        panelCentreLayout.columnWidths = new int[] {0, 0, 0, 0, 0};
        panelCentreLayout.rowHeights = new int[] {0, 20, 0, 20, 0, 20, 0};
        panelCentre.setLayout(panelCentreLayout);

        labelNom.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelNom.setText("Nom de l'OP :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(labelNom, gridBagConstraints);

        labelNb.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelNb.setText("Nombre d'iPads prévus :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(labelNb, gridBagConstraints);

        labelDateDebut.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelDateDebut.setText("Date de début de l'OP :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(labelDateDebut, gridBagConstraints);

        labelDateFin.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelDateFin.setText("Date de fin de l'OP :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(labelDateFin, gridBagConstraints);

        txtNom.setPreferredSize(new java.awt.Dimension(100, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(txtNom, gridBagConstraints);

        txtNb.setPreferredSize(new java.awt.Dimension(100, 28));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(txtNb, gridBagConstraints);

        dtDebut.setDateFormatString("dd/MM/yy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(dtDebut, gridBagConstraints);

        dtFin.setDateFormatString("dd/MM/yy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 20);
        panelCentre.add(dtFin, gridBagConstraints);

        getContentPane().add(panelCentre, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetourMouseClicked
        this.dispose();
    }//GEN-LAST:event_btnRetourMouseClicked

    private void btnOKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnOKMouseClicked
        String nomOP;
        int nbIpads = 0;
        Date dateDebut;
        Date dateFin;
        String donnee;// use ti add data in database
        
        // activé que si un nom est entré
        if (!this.txtNom.getText().equals(""))
        {
            nomOP = this.txtNom.getText();
            donnee = nomOP;
            if (!this.txtNb.getText().equals(""))
            {
                try
                {
                    nbIpads = Integer.parseInt(this.txtNb.getText());
                    donnee= donnee +"+"+nbIpads;
                }   
                catch (Exception e)
                {
                    System.out.println("L'argument rentre n'est pas un entier");
                }
            }else
                donnee = donnee + "+";
            
            //Récupère le modèle de la JTable pour y ajouter les nouvelles données
            JTable tablePlanning = fenMere.getTablEntrepotEnvoi();
            ModelPlanning modelP = (ModelPlanning)tablePlanning.getModel();
            
            //Mise en place de la nouvelle opération à ajouter
            //OP newOP = new OP(nomOP, nbIpads);
            
            //Ajout des dates de début et fin si elles sont correctement définies
            dateDebut = this.dtDebut.getDate();
            if (!(dateDebut == null))
            {
                //newOP.setDateDebut(dateDebut);                        
            }
            donnee= donnee +"+"+(dateDebut == null ? "":
                    new SimpleDateFormat("yy/MM/dd").format(dateDebut));
            
            dateFin = this.dtFin.getDate();
            if (!(dateFin == null))
            {
                //newOP.setDateFin(dateFin);                        
            }
            donnee= donnee +"+"+(dateFin == null ? "":
                    new SimpleDateFormat("yy/MM/dd").format(dateFin));
            
          
            
            
            
            //Ajout de la nouvelle OP dans la BDD?
            InstructionSql ajout_op = new InstructionSql();
            donnee= donnee +"+";
            System.out.println("data = "+donnee);
            System.out.println("okk1");
            ajout_op.Ajout_Operation(donnee);
            System.out.println("okk2");            
            try {
                //Ajout de la nouvelle OP dans la JTable
                modelP.getbaseinformation();
            } catch (SQLException ex) {
                System.out.println( "erreur récuperation base donnee: " + ex.getMessage());
            }
            
            
            //Suppression de la fenetre
            this.dispose();
        }
    }//GEN-LAST:event_btnOKMouseClicked
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRetour;
    private com.toedter.calendar.JDateChooser dtDebut;
    private com.toedter.calendar.JDateChooser dtFin;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelDateDebut;
    private javax.swing.JLabel labelDateFin;
    private javax.swing.JLabel labelNb;
    private javax.swing.JLabel labelNom;
    private javax.swing.JLabel labelNomFenetre;
    private javax.swing.JPanel panelCentre;
    private javax.swing.JTextField txtNb;
    private javax.swing.JTextField txtNom;
    // End of variables declaration//GEN-END:variables
}
