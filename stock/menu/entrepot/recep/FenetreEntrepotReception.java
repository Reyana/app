/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package stock.menu.entrepot.recep;

import stock.menu.entrepot.FenetreMenuEntrepot;
import stock.menu.FenetreMenuPrincipal;
import stock.base.Conteneur;
import stock.base.Ipad;
import stock.base.OP;
import stock.base.Serveur;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Magency
 */
public class FenetreEntrepotReception extends javax.swing.JFrame {

    private final OP op;
    private List<Ipad> listIpadsOP = new ArrayList<Ipad>();
    private List<Serveur> listServeursOP = new ArrayList<Serveur>();

    /**
     * Creates new form FenetreEntrepotReception
     */
    public FenetreEntrepotReception(OP op) {
        initComponents();
        
        this.op = op;
        
        // Nom de la fenetre recupere le nom de l'OP
        this.txtNomOP.setText(op.getNomOP());
        
        // Affiche tous les conteneur de l'OP
        afficheConteneursOP(this.op);
        
        // Affiche le nb d'iPads recus et scannes
        calculNbIpadRecus();
        calculNbIpadScannes();
    }
    
    public FenetreEntrepotReception(OP op, int longueur, int largeur) {
        this(op);
        this.setSize(new java.awt.Dimension(longueur, largeur));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelTitre = new javax.swing.JPanel();
        labelNomFenetre = new javax.swing.JLabel();
        txtNomOP = new javax.swing.JLabel();
        btnRetour = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        tablEntrepotReception = new javax.swing.JTable();
        panelBoutons = new javax.swing.JPanel();
        btnScan = new javax.swing.JButton();
        btnDifferences = new javax.swing.JButton();
        btnValider = new javax.swing.JButton();
        panelTextes = new javax.swing.JPanel();
        panelTexteRecus = new javax.swing.JPanel();
        labelBasRecus1 = new javax.swing.JLabel();
        txtNbiPadRecus = new javax.swing.JLabel();
        labelBasRecus2 = new javax.swing.JLabel();
        panelTexteScannes = new javax.swing.JPanel();
        labelBasScannes1 = new javax.swing.JLabel();
        txtNbiPadScannes = new javax.swing.JLabel();
        labelBasScannes2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        panelTitre.setLayout(new java.awt.GridBagLayout());

        labelNomFenetre.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        labelNomFenetre.setForeground(new java.awt.Color(51, 51, 51));
        labelNomFenetre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelNomFenetre.setText("Réception : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        panelTitre.add(labelNomFenetre, gridBagConstraints);

        txtNomOP.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        txtNomOP.setForeground(new java.awt.Color(51, 51, 51));
        txtNomOP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtNomOP.setText("_");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        panelTitre.add(txtNomOP, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        getContentPane().add(panelTitre, gridBagConstraints);

        btnRetour.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stock/images/Bouton Retour.png"))); // NOI18N
        btnRetour.setToolTipText("Retour");
        btnRetour.setBorderPainted(false);
        btnRetour.setContentAreaFilled(false);
        btnRetour.setMinimumSize(new java.awt.Dimension(16, 16));
        btnRetour.setPreferredSize(new java.awt.Dimension(32, 32));
        btnRetour.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRetourMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 0);
        getContentPane().add(btnRetour, gridBagConstraints);

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stock/images/Bouton Home.PNG"))); // NOI18N
        btnHome.setToolTipText("Menu Principal");
        btnHome.setBorderPainted(false);
        btnHome.setContentAreaFilled(false);
        btnHome.setMaximumSize(new java.awt.Dimension(32, 32));
        btnHome.setMinimumSize(new java.awt.Dimension(16, 16));
        btnHome.setPreferredSize(new java.awt.Dimension(32, 32));
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 0);
        getContentPane().add(btnHome, gridBagConstraints);

        jScrollPane.setMinimumSize(new java.awt.Dimension(512, 512));

        tablEntrepotReception.setAutoCreateRowSorter(true);
        tablEntrepotReception.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tablEntrepotReception.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom conteneur", "iPads venant de l'OP", "iPads scannés"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablEntrepotReception.setGridColor(new java.awt.Color(102, 102, 102));
        tablEntrepotReception.setRowHeight(30);
        tablEntrepotReception.setSelectionBackground(new java.awt.Color(153, 204, 255));
        tablEntrepotReception.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tablEntrepotReception.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tablEntrepotReceptionMousePressed(evt);
            }
        });
        jScrollPane.setViewportView(tablEntrepotReception);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jScrollPane, gridBagConstraints);

        java.awt.GridBagLayout panelBoutonsLayout = new java.awt.GridBagLayout();
        panelBoutonsLayout.columnWidths = new int[] {0};
        panelBoutonsLayout.rowHeights = new int[] {0, 10, 0, 10, 0};
        panelBoutons.setLayout(panelBoutonsLayout);

        btnScan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stock/images/Bouton Scan Conteneur.PNG"))); // NOI18N
        btnScan.setToolTipText("Scan des iPads reçus pour valider leur réception");
        btnScan.setBorderPainted(false);
        btnScan.setContentAreaFilled(false);
        btnScan.setEnabled(false);
        btnScan.setFocusPainted(false);
        btnScan.setMinimumSize(new java.awt.Dimension(128, 128));
        btnScan.setPreferredSize(new java.awt.Dimension(128, 128));
        btnScan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnScanMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        panelBoutons.add(btnScan, gridBagConstraints);

        btnDifferences.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stock/images/Bouton Diff.PNG"))); // NOI18N
        btnDifferences.setToolTipText("Affichage des différences entre les les iPads reçus et les iPads scannés");
        btnDifferences.setBorderPainted(false);
        btnDifferences.setContentAreaFilled(false);
        btnDifferences.setEnabled(false);
        btnDifferences.setFocusPainted(false);
        btnDifferences.setMinimumSize(new java.awt.Dimension(128, 128));
        btnDifferences.setPreferredSize(new java.awt.Dimension(128, 128));
        btnDifferences.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDifferencesMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        panelBoutons.add(btnDifferences, gridBagConstraints);

        btnValider.setIcon(new javax.swing.ImageIcon(getClass().getResource("/stock/images/Bouton Valider Reception.PNG"))); // NOI18N
        btnValider.setToolTipText("Validation de la réception des iPads");
        btnValider.setBorderPainted(false);
        btnValider.setContentAreaFilled(false);
        btnValider.setMinimumSize(new java.awt.Dimension(128, 128));
        btnValider.setPreferredSize(new java.awt.Dimension(128, 128));
        btnValider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnValiderMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        panelBoutons.add(btnValider, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(panelBoutons, gridBagConstraints);

        panelTextes.setLayout(new java.awt.GridBagLayout());

        labelBasRecus1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelBasRecus1.setText("Total reçus : ");
        labelBasRecus1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        panelTexteRecus.add(labelBasRecus1);

        txtNbiPadRecus.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        txtNbiPadRecus.setText("_");
        txtNbiPadRecus.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        panelTexteRecus.add(txtNbiPadRecus);

        labelBasRecus2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelBasRecus2.setText("iPad(s)");
        labelBasRecus2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        panelTexteRecus.add(labelBasRecus2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 20, 25);
        panelTextes.add(panelTexteRecus, gridBagConstraints);

        labelBasScannes1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelBasScannes1.setText("Total scannés : ");
        labelBasScannes1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        panelTexteScannes.add(labelBasScannes1);

        txtNbiPadScannes.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        txtNbiPadScannes.setText("_");
        txtNbiPadScannes.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        panelTexteScannes.add(txtNbiPadScannes);

        labelBasScannes2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        labelBasScannes2.setText("iPad(s)");
        labelBasScannes2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        panelTexteScannes.add(labelBasScannes2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(20, 25, 20, 0);
        panelTextes.add(panelTexteScannes, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        getContentPane().add(panelTextes, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetourMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRetourMouseClicked
        FenetreMenuEntrepot fMenuEntrepot = new FenetreMenuEntrepot(this.getWidth(), this.getHeight());
        fMenuEntrepot.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRetourMouseClicked

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        FenetreMenuPrincipal fMenuPrincipal = new FenetreMenuPrincipal(this.getWidth(), this.getHeight());
        fMenuPrincipal.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnHomeMouseClicked

    private void tablEntrepotReceptionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablEntrepotReceptionMousePressed
        this.btnScan.setEnabled(true);
        this.btnDifferences.setEnabled(true);
    }//GEN-LAST:event_tablEntrepotReceptionMousePressed

    private void btnScanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnScanMouseClicked
        if(this.btnScan.isEnabled())
        {
            Conteneur selectedConteneur = this.op.getListConteneur().get(this.tablEntrepotReception.convertRowIndexToModel(this.tablEntrepotReception.getSelectedRow()));
            DialogueEntrepotDecharger dDecharger = new DialogueEntrepotDecharger(this, true, selectedConteneur, listIpadsOP);
            dDecharger.setVisible(true);
            
            //MAJ du nb d'iPads scannes
            calculNbIpadScannes();
        }
    }//GEN-LAST:event_btnScanMouseClicked

    private void btnDifferencesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDifferencesMouseClicked
        if(this.btnDifferences.isEnabled())
        {
            DialogueDifferences dDiff = new DialogueDifferences(this, true, this.getWidth(), this.getHeight(), this.op, this.listIpadsOP);
            dDiff.setVisible(true);
        }
    }//GEN-LAST:event_btnDifferencesMouseClicked

    private void btnValiderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnValiderMouseClicked
        
    }//GEN-LAST:event_btnValiderMouseClicked
    
    /**
     * @brief Calcules le nombre d'iPads recus, et affiche ce nombre dans la fenetre
     */
    private void calculNbIpadRecus()
    {
        int i;
        int nb = 0;
        
        for (i = 0; i < this.op.getListConteneur().size(); i++)
        {
            nb += this.op.getListConteneur().get(i).getNbIpad();
        }   
        this.txtNbiPadRecus.setText(String.valueOf(nb));
    }
    
    
    /**
     * @brief Calcules le nombre d'iPads scannes, et affiche ce nombre dans la fenetre
     */
    private void calculNbIpadScannes()
    {
        int i;
        int nb = 0;
        
        for (i = 0; i < this.listIpadsOP.size(); i++)
        {
            nb ++;
        }   
        this.txtNbiPadScannes.setText(String.valueOf(nb));
    }
    
    
    
    /**
     * @brief Affiche dans la JTable de la fenetre les conteneur de l'OP passe en parametre (place en fin de liste)
     * 
     * @param op {@link OP} dont les conteneurs seront affiches dans la JTable
     */
    private void afficheConteneursOP(OP op)
    {
        int i;
        for(i = 0; i < op.getListConteneur().size(); i++)
        {
            afficheConteneur(op.getListConteneur().get(i));
        } 
    }
    
    
    
    /**
     * @brief Affiche dans la JTable de la fenetre le conteneur passe en parametre (place en fin de liste)
     * 
     * @param conteneur {@link Conteneur} a afficher dans la JTable
     */
    private void afficheConteneur(Conteneur conteneur)
    {
        // Recupere le modele pour ajouter de nouvelles lignes
        DefaultTableModel dtm = (DefaultTableModel)this.tablEntrepotReception.getModel();
        
        // Mise en vecteur des infos des iPads de la liste
        Vector row = new Vector();
        row.add(conteneur.getName());
        row.add(conteneur.getNbIpad());
        //row.add();
        
        // Ajout d'une nouvelle ligne avec les donnees de l'iPad ci-dessus
        dtm.addRow(row);
        dtm.fireTableRowsInserted(dtm.getRowCount() - 1, dtm.getRowCount() - 1);
    }
    
    
    
 
    
    
    
    /**
     * @brief Place dans la JTable les informations relatives au conteneur passe en parametre
     * 
     * @param conteneur {@link Conteneur} chargé
     */
    public void dechargeConteneur(Conteneur conteneurScanne, int nbScans)
    {
        boolean trouve = false;
        int i = 0;
        int indexConteneurDansListe = -1;

        DefaultTableModel dtm = (DefaultTableModel)this.tablEntrepotReception.getModel();
        while(i < dtm.getRowCount() && !trouve)
        {
            if(dtm.getValueAt(i, 0).equals(conteneurScanne.getName()))
            {
                indexConteneurDansListe = i;
                trouve = true;
            }
            i++;
        }
        if(trouve)
        {
            int newNbScans;
            // Modifies l'affichage dans la tacle du nb d'iPads scannes
            Integer oldNbScans = (Integer)dtm.getValueAt(
                    this.tablEntrepotReception.convertRowIndexToModel(this.tablEntrepotReception.getSelectedRow()), 2);
            if(oldNbScans == null)
                newNbScans = nbScans;
            else
                newNbScans = (int)oldNbScans + nbScans;
            
            dtm.setValueAt(newNbScans, indexConteneurDansListe, 2);          
            dtm.fireTableRowsUpdated(indexConteneurDansListe, indexConteneurDansListe); 
        }
    }
    
    
    


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDifferences;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnRetour;
    private javax.swing.JButton btnScan;
    private javax.swing.JButton btnValider;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JLabel labelBasRecus1;
    private javax.swing.JLabel labelBasRecus2;
    private javax.swing.JLabel labelBasScannes1;
    private javax.swing.JLabel labelBasScannes2;
    private javax.swing.JLabel labelNomFenetre;
    private javax.swing.JPanel panelBoutons;
    private javax.swing.JPanel panelTexteRecus;
    private javax.swing.JPanel panelTexteScannes;
    private javax.swing.JPanel panelTextes;
    private javax.swing.JPanel panelTitre;
    private javax.swing.JTable tablEntrepotReception;
    private javax.swing.JLabel txtNbiPadRecus;
    private javax.swing.JLabel txtNbiPadScannes;
    private javax.swing.JLabel txtNomOP;
    // End of variables declaration//GEN-END:variables
}
